apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: provisioner-nvme
spec:
  requirements:
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["on-demand"]
    - key: "node.kubernetes.io/instance-type"
      operator: In
      values: ["m5ad.large"]  # instance type with NVMe
  providerRef:
    name: nodetemplate-nvme
  labels:
    karpenter.sh: provisioner-nvme
  taints:
  - key: karpenter.sh/provisioner-nvme
    effect: NoSchedule
  ttlSecondsAfterEmpty: 120
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: nodetemplate-nvme
spec:
  subnetSelector:
    karpenter.sh/subnets-discovery: "<your-subnets-tag>"
  securityGroupSelector:
    karpenter.sh/discovery: "<your-eks-sg>"
  userData: |
      #!/bin/bash

      # SSD disk
      mkfs.ext4 /dev/nvme1n1
      mkdir /mnt/nvme1
      mount /dev/nvme1n1 /mnt/nvme1
      chmod 777 -R /mnt/nvme1/
      echo \"/dev/nvme1n1 /mnt/nvme1 ext4 discard,defaults,nofail 0 2\" >> /etc/fstab
